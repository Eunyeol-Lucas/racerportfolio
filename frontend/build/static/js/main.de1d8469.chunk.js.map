{"version":3,"sources":["pages/Cordinate.js","pages/Login.js","networkComponents/icons/MagnifyingGlass.jsx","networkComponents/SearchTextField.jsx","networkComponents/Card.js","networkComponents/UserCard.jsx","networkComponents/UserCounter.jsx","modules/authHeader.js","pages/Network.js","pages/RegisterPage.js","Helper/PrivateRoute.js","components/Components.js","components/Award/AwardList.jsx","components/Award/AwardInput.jsx","components/Award.js","components/Certificate/CertificateList.jsx","components/Certificate/CertificateInput.jsx","components/Certificate.js","components/Education/EducationInput.jsx","components/Education/EducationList.jsx","components/Education.js","components/Profile/ProfileList.jsx","components/Profile/ProfileUpload.jsx","components/Profile.js","components/Project/ProjectList.jsx","components/Project/ProjectInput.jsx","components/Project.js","pages/Main.js","pages/Logout.js","components/ListComponents.jsx","pages/Users.js","App.js","index.js"],"names":["Container","styled","div","props","large","InputBlock","Inputbox","input","Button","button","Label","label","hr","p","LoginPage","useState","userId","setUserId","password","setPassword","window","localStorage","getItem","form","onSubmit","e","preventDefault","body","axios","post","process","then","res","console","log","status","data","setItem","JSON","stringify","access_token","location","href","alert","catch","response","htmlFor","placeholder","type","value","onChange","target","MagnifyingGlass","width","height","viewBox","fill","xmlns","d","fillOpacity","id","maskUnits","x","y","mask","Input","SearchTextField","debouncedOnChange","func","timeout","timer","args","clearTimeout","setTimeout","apply","debounce","setSearch","defaultProps","Username","h5","Introduction","UserCardIcon","img","Corner","OuterCorner","UserCard","profile_image","username","introduction","history","useHistory","src","alt","onClick","push","Text","UserCount","count","authHeader","token","parse","Authorization","UserContainer","Network","cardData","setCardData","totalCardCount","setTotalCardCount","search","useEffect","a","get","headers","length","filter","includes","map","user","i","RegisterPage","setId","idCheck","setIdCheck","idValidate","setIdValidate","passwordVali","setPasswordVali","passwordCheck","setPasswordCheck","passwordError","setPasswordError","setUsername","usernameCheck","setUsernameCheck","onChangePasswordChk","useCallback","result","name","required","test","WarningP","style","color","PrivateRoute","Component","component","rest","render","to","pathname","state","from","Hr","MainP","UserInput","TransButton","AwardList","awardList","setIsToggle","award","idx","display","description","AwardInput","awardName","awardDescription","setAwardName","setAwardDescription","defaultValue","Award","setAwardList","isToggle","removeItem","requestUserAward","CertificateList","certificateList","certificate","certified_by","certified_date","CertificateInput","setName","setCertified_by","setCertified_date","Certificate","setCertificateList","requestUserEdu","EducationInput","educationList","setSchool","setMajor","setRadio","education","school","major","EducationList","Inline","Education","setEducationList","radio","ProfileList","file","Img","ProfileUpload","onhandlerChange","setIntroduction","onSubmitIntroduction","className","accept","Mainpage","setFile","request_profile","event","imageFile","Array","files","formData","FormData","append","patch","URL","createObjectURL","ProjectList","projectList","project","title","content","start_date","end_date","ProjectInput","setTitle","setContent","setStartDate","startDate","setEndDate","endDate","Project","Date","setProjectList","requestUserProject","Main","Logout","ProfileContainer","MainContainer","Users","profile","setProfile","user_id","split","users","education_list","award_list","certificate_list","project_list","App","Navi","StyledLink","exact","path","header","ul","Link","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.de1d8469.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: relative;\n  top: 50px;\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  background-color: white;\n  margin: 0 auto 0;\n  width: ${(props) => (props.large ? 500 : 400)}px;\n  height: ${(props) => (props.large ? 700 : 600)}px;\n  border-radius: 15px;\n  box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\n`;\n\nexport const InputBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Inputbox = styled.input`\n  width: 300px;\n  height: 50px;\n  padding-left: 30px;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  margin-left: auto;\n\n  align-items: center;\n  justify-content: center;\n  font-size: 25px;\n  line-height: 22px;\n  background-color: #0a82ff;\n  color: white;\n  min-width: ${(props) => (props.large ? 130 : 100)}px;\n  height: 50px;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:active {\n    background-color: #0a6eff;\n    outline: none;\n  }\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 15px;\n  margin-right: auto;\n  font-size: 16px;\n`;\n\nexport const Hr = styled.hr`\n  width: 600px;\n`;\nexport const MainP = styled.p`\n  font-size: 18px;\n  font-weight: bold;\n`;\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport * as Login from \"./Cordinate\";\n\n// Login Page\nexport default function LoginPage  () {\n  const [userId, setUserId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (userId === \"\" || password === \"\") {\n      alert(\"아이디 또는 비밀번호를 입력해주세요\");\n      return;\n    }\n    // if (!userId && !password) return;\n    const body = {\n      userId,\n      password,\n    };\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/api/login`, body)\n      .then((res) => {\n        console.log(res);\n        if (res.status === 200) {\n          console.log(\"access_token\", res.data);\n          localStorage.setItem(\n            \"access_token\",\n            JSON.stringify(res.data.access_token)\n          );\n          window.location.href = \"/main\";\n          alert(\"로그인에 성공하였습니다.\");\n        }\n      })\n      .catch((e) => {\n        console.log(e.response);\n        alert(\"아이디 또는 비밀번호를 확인하세요\");\n      });\n  };\n\n  return (\n    <Login.Container>\n      {window.localStorage.getItem(\"access_token\") ? (\n        <div>환영합니다.</div>\n      ) : (\n        <form form onSubmit={handleSubmit}>\n          <Login.InputBlock>\n            <Login.Label htmlFor=\"userId\">ID</Login.Label>\n\n            <Login.Inputbox\n              placeholder=\"Enter your Email\"\n              type=\"text\"\n              value={userId}\n              onChange={(e) => setUserId(e.target.value)}\n            />\n          </Login.InputBlock>\n          <Login.InputBlock>\n            <Login.Label htmlFor=\"password\">PASSWORD </Login.Label>\n            <Login.Inputbox\n              placeholder=\"Enter your Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Login.InputBlock>\n          <Login.Button type=\"submit\">로그인</Login.Button>\n        </form>\n      )}\n    </Login.Container>\n  );\n};\n\n\n\n  \n  \n","export default function MagnifyingGlass() {\n  return (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M6.6994 13.2C3.05432 13.2 0.0993958 10.2451 0.0993958 6.6C0.0993958 2.95492 3.05432 0 6.6994 0C10.3445 0 13.2994 2.95492 13.2994 6.6C13.2994 8.24978 12.6941 9.75818 11.6934 10.9152L15.76 14.9818C15.9474 15.1692 15.9474 15.4731 15.76 15.6606C15.5725 15.848 15.2686 15.848 15.0812 15.6606L11.0146 11.594C9.85756 12.5947 8.34917 13.2 6.6994 13.2ZM6.69941 12.24C9.81429 12.24 12.3394 9.71488 12.3394 6.6C12.3394 3.48511 9.81429 0.959998 6.69941 0.959998C3.58452 0.959998 1.05941 3.48511 1.05941 6.6C1.05941 9.71488 3.58452 12.24 6.69941 12.24Z\"\n        fill=\"black\"\n        fillOpacity=\"0.01\"\n      />\n      <mask\n        id=\"magnifying-glass-mask0\"\n        maskUnits=\"userSpaceOnUse\"\n        x=\"0\"\n        y=\"0\"\n        width=\"16\"\n        height=\"16\"\n      >\n        <path\n          d=\"M6.6994 13.2C3.05432 13.2 0.0993958 10.2451 0.0993958 6.6C0.0993958 2.95492 3.05432 0 6.6994 0C10.3445 0 13.2994 2.95492 13.2994 6.6C13.2994 8.24978 12.6941 9.75818 11.6934 10.9152L15.76 14.9818C15.9474 15.1692 15.9474 15.4731 15.76 15.6606C15.5725 15.848 15.2686 15.848 15.0812 15.6606L11.0146 11.594C9.85756 12.5947 8.34917 13.2 6.6994 13.2ZM6.69941 12.24C9.81429 12.24 12.3394 9.71488 12.3394 6.6C12.3394 3.48511 9.81429 0.959998 6.69941 0.959998C3.58452 0.959998 1.05941 3.48511 1.05941 6.6C1.05941 9.71488 3.58452 12.24 6.69941 12.24Z\"\n          fill=\"white\"\n        />\n      </mask>\n      <g mask=\"url(#magnifying-glass-mask0)\">\n        <rect width=\"16\" height=\"16\" fill=\"#292A2C\" />\n      </g>\n    </svg>\n  );\n}\n","import styled from \"styled-components\";\nimport MagnifyingGlass from \"./icons/MagnifyingGlass.jsx\";\n\n// 이곳에 컨테이너 스타일을 넣으세요\nconst Container = styled.div`\n  width: 100%;\n  position: relative;\n  margin-bottom: 12px;\n\n  svg {\n    position: absolute;\n    top: 15px;\n    left: 12px;\n  }\n`;\n\n// 이곳에 Input의 스타일을 넣으세요\nconst Input = styled.input`\n  padding: 11px 11px 11px 39px;\n  border: 1px solid #c9cacc;\n  border-radius: 4px;\n  height: 46px;\n  box-sizing: border-box;\n  width: 100%;\n  font-size: 14px;\n  line-height: 22px;\n  color: #7d7e80;\n`;\n\nSearchTextField.defaultProps = {\n  value: \"\",\n  onChange: () => {},\n};\n\n// Debounce를 이용하여 검색창 API호출 지연시킴\n// 검색창 값이 바뀔 때 마다 API호출을 하면 너무많은 요청을 보내기 때문에 서버에 과부화가 걸릴 수 있다. \n// 웹클라이언트에서 debounce를 이용하여서 요청 보내는 횟수를 적절히 조절\nfunction debounce(func, timeout) {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      func.apply(this, args);\n    }, timeout);\n  };\n}\n\n// 네트워크 검색창 기능\nexport default function SearchTextField({setSearch }) {\n  const debouncedOnChange = debounce(setSearch, 300);\n  return (\n    <Container>\n      <MagnifyingGlass />\n      <Input\n        placeholder=\"이름으로 검색하기\"\n        onChange={(e) => {\n          debouncedOnChange(e.target.value);\n        }}\n      />\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background-color: white;\n  border: 1px solid #f0f1f3;\n  border-radius: 8px;\n  width: 398px;\n  height: 409px;\n  box-sizing: border-box;\n  padding: 32px 24px 20px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    bottom: 7px;\n    left: 7px;\n  }\n`;\n\nexport const Username = styled.h5`\n  font-weight: bold;\n  font-size: 30px;\n  line-height: 1px;\n  color: #151618;\n  margin-bottom: 15px;\n`;\n\nexport const Introduction = styled.p`\n  color: #5e5f61;\n  font-size: 20px;\n  line-height: 22px;\n`;\n\nexport const UserCardIcon = styled.img`\n  border-radius: 18px;\n  width: 130px;\n  height: 130px;\n  padding: 10px;\n  box-sizing: border-box;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 24px;\n  margin-top: 10px;\n`;\n\nexport function Corner() {\n  return (\n    <OuterCorner>\n      <div />\n    </OuterCorner>\n  );\n}\n\nconst OuterCorner = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 80px;\n  height: 80px;\n  background-color: white;\n  box-shadow: inset 10px -10px 20px rgba(95, 95, 95, 0.1);\n  border-radius: 0px 8px 0px 32px;\n\n  > div {\n    transition: all 200ms ease-in-out 0ms;\n    position: absolute;\n    width: 36px;\n    height: 36px;\n    left: 0;\n    bottom: 0;\n    background: #f4f4f4;\n    box-shadow: inset 10px -10px 20px rgba(95, 95, 95, 0.07);\n    border-radius: 0px 8px 0px 32px;\n  }\n\n  :hover > div {\n    width: 52px;\n    height: 52px;\n    background-color: #0a82ff;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 22px;\n  line-height: 22px;\n  background-color: #0a82ff;\n  color: white;\n  width: 130px;\n  height: 50px;\n  border-radius: 5px;\n  border: none;\n  outline: none;\n  box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:active {\n    background-color: #0a6eff;\n    outline: none;\n  }\n`;\n","import * as Card from \"./Card.js\";\nimport { useHistory } from \"react-router\";\n\nexport default function UserCard({\n  profile_image,\n  username,\n  introduction,\n  id,\n}) {\n  \n  const history = useHistory()\n  const Move = () => {\n    history.push(`/main/user/${id}`)\n  }\n  return (\n    <Card.Container>\n      <Card.Corner />\n      <Card.UserCardIcon\n        src={`${process.env.REACT_APP_BASE_URL}/${profile_image}`}\n        alt={profile_image}\n      />\n      <Card.Username>{username}</Card.Username>\n      <Card.Introduction>{introduction}</Card.Introduction>\n      \n      <Card.Button onClick={Move}>정보 보기</Card.Button>\n      \n    </Card.Container>\n  );\n}\n","import styled from \"styled-components\";\n\nconst Text = styled.p`\n  width: 100%;\n  font-weight: bold;\n  font-size: 12px;\n  line-height: 18px;\n  color: #151618;\n  box-shadow: inset 0px -1px 0px #e1e2e4;\n  padding: 12px 0;\n  margin-bottom: 12px;\n`;\n\nUserCount.defaultProps = {\n  count: 0,\n};\n\nexport default function UserCount({ count }) {\n  return <Text>전체 {count}개</Text>;\n}\n","import React from 'react';\n// server 요청시 authorization 자동화 컴포넌트\nexport default function authHeader() {\n  const token = JSON.parse(localStorage.getItem(\"access_token\"));\n\n  if (token) {\n    return { Authorization: \"Bearer \" + token };\n  } else {\n    return {};\n  }\n}\n","import axios from \"axios\";\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  UserCount,\n  UserCard,\n  SearchTextField,\n} from \"../networkComponents/allNetworkComponents\";\nimport authHeader from \"../modules/authHeader\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100vh;\n  width: 1232px;\n  margin: auto;\n  padding-top: 100px;\n  flex-direction: column;\n`;\n\nconst UserContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 398px);\n  grid-column-gap: 19px;\n  grid-row-gap: 32px;\n`;\n\nexport default function Network() {\n\n  const [cardData, setCardData] = useState([]);\n  const [totalCardCount, setTotalCardCount] = useState(0);\n  const [search, setSearch] = useState(\"\");\n\n\n  useEffect(() => {\n    (async function () {\n      const response = await axios.get(\n        `${process.env.REACT_APP_BASE_URL}/api/profile/users`,\n        { headers: authHeader() }\n      );\n      setTotalCardCount(response.data.length);\n      setCardData(response.data);\n    })();\n  }, [search]);\n\n  return (\n    <Container>\n      <SearchTextField search={search} setSearch={setSearch} />\n      <UserCount count={totalCardCount} />\n      <UserContainer>\n        {cardData.filter((data) => {\n          if (search === null) {\n            return data\n          } \n          else if (data.username.includes(search)) {\n            return data\n          }\n          return false;\n        })\n          .map((user, i) => (\n          <UserCard\n            profile_image={user.profile_image}\n            username={user.username}\n            introduction={user.introduction}\n            id = {user.id}\n            key={`user-card-${i}`}\n          />\n        ))}\n      </UserContainer>\n    </Container>\n  );\n}\n","import React, { useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport * as Register from './Cordinate';\nimport styled from \"styled-components\";\n//회원가입 page\nconst RegisterPage = (props) => {\n  const [id, setId] = useState(\"\");\n  const [idCheck, setIdCheck] = useState(true);\n  const [idValidate, setIdValidate] = useState(true);\n  const [password, setPassword] = useState(\"\");\n  const [passwordVali, setPasswordVali] = useState(true);\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [usernameCheck, setUsernameCheck] = useState(true);\n\n  const { history } = props;\n  // Custom Hook 이전\n  // 두 비밀번호가 일치하는지 확인\n  const onChangePasswordChk = useCallback(\n    (e) => {\n      //비밀번호를 입력할때마다 password 를 검증하는 함수\n      setPasswordError(e.target.value !== password);\n      setPasswordCheck(e.target.value);\n    },\n    [passwordCheck]\n  );\n  // 아이디 중복 검사\n  const onChangeId = (e) => {\n    setId(e.target.value);\n    const checkEmail = (value) => {\n      const regExp =\n        /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n      return regExp.test(value);\n    };\n    !checkEmail(e.target.value) ? setIdCheck(false) : setIdCheck(true);\n  };\n  // 패스워드 유효성 검사\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n    const checkPassword = (value) => {\n      const regExp = /^.*(?=.{10,20})(?=.*[0-9])(?=.*[a-zA-Z]).*$/;\n      return regExp.test(value);\n    };\n    !checkPassword(e.target.value)\n      ? setPasswordVali(false)\n      : setPasswordVali(true);\n  };\n  // 이름 유효성 검사\n  const onChangeUsername = (e) => {\n    setUsername(e.target.value);\n    const checkUsername = (value) => {\n      const regExp = /^[a-zA-Z가-힣]*$/;\n      return regExp.test(value);\n    };\n    !checkUsername(e.target.value)\n      ? setUsernameCheck(false)\n      : setUsernameCheck(true);\n  };\n  // 회원가입 버튼 누를 경우, 최종 확인\n  const onSubmit = (e) => {\n    e.preventDefault();\n    /**검증 로직 만들기\n     1. 아이디가 이메일이 아닐 경우 return\n     2. 비밀번호와 비밀번호 체크가 다를 경우 return\n     3. 사용자 이름이 기준에 맞지 않을 경우 return\n     4. 모든 유효성 검사를 통과할 경우 서버에 data 저장 요청\n     5. 중복된 아이디가 있을 경우 -> fail -> 아이디 유효성 검사 실패 -> return\n     6. 최종적으로 모든 유효성 검사를 통과할 경우 데이터 저장 -> 회원가입 완료\n     7. 회원가입 완료 후 로그인 page로 이동\n     */\n    if (!idCheck) return;\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n    if (!usernameCheck) return;\n\n    const body = {\n      username,\n      id,\n      password,\n    };\n    console.log(body);\n    axios.post(`http://localhost:5000/api/register`, body).then((res) => {\n      console.log(res);\n      if (res.data.result === \"fail\") {\n        setIdValidate(false);\n      } else {\n        alert(\"회원 가입에 성공하셨습니다.\");\n        history.push(\"/login\");\n      }\n    });\n  }\n\n  return (\n      <Register.Container large >\n      <form onSubmit={onSubmit}>\n        <Register.InputBlock>\n          <Register.Label htmlFor=\"id\">ID</Register.Label>\n          <Register.Inputbox\n            name=\"id\"\n            value={id}\n            required\n            onChange={onChangeId}\n            placeholder=\"ID\"\n          />\n          {!idCheck && (\n            <WarningP style={{ color: \"red\" }}>Email 형식으로 입력해주세요.</WarningP>\n          )}\n          {!idValidate && (\n            <WarningP style={{ color: \"red\" }}>중복된 아이디가 존재합니다.</WarningP>\n          )}\n        </Register.InputBlock>\n        <Register.InputBlock>\n          <Register.Label htmlFor=\"password\">PASSWORD</Register.Label>\n          <Register.Inputbox\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            placeholder=\"ID\"\n            required\n            onChange={onChangePassword}\n          />\n          {!passwordVali && (\n            <WarningP style={{ color: \"red\" }}>\n              영문, 숫자, 특수문자 조합 10자리 이상\n            </WarningP>\n          )}\n        </Register.InputBlock>\n        <Register.InputBlock>\n          <Register.Label htmlFor=\"password-check\">\n            PASSWORD CHECK\n          </Register.Label>\n          <Register.Inputbox\n            name=\"password-check\"\n            type=\"password\"\n            value={passwordCheck}\n            required\n            onChange={onChangePasswordChk}\n          />\n          {passwordError && (\n            <WarningP style={{ color: \"red\" }}>비밀번호가 일치하지 않습니다.</WarningP>\n          )}\n        </Register.InputBlock>\n        <Register.InputBlock>\n          <Register.Label htmlFor=\"username\">NAME</Register.Label>\n          <Register.Inputbox\n            name=\"username\"\n            value={username}\n            placeholder=\"Enter your Name\"\n            required\n            onChange={onChangeUsername}\n          />\n          {!usernameCheck && (\n            <WarningP style={{ color: \"red\" }}>\n              한글 또는 영문으로만 입력이 가능합니다.\n            </WarningP>\n          )}\n        </Register.InputBlock>\n        <div>\n          <p>\n            <Register.Button large type=\"submit\">회원가입</Register.Button>\n          </p>\n        </div>\n      </form>\n    </Register.Container>\n  );\n};\n\nexport default RegisterPage;\n\nconst WarningP = styled.p`\n  margin-bottom: 0;\n`","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        localStorage.getItem(\"access_token\") ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: relative;\n  top: 50px;\n  display: flex;\n  padding: 50px;\n  align-items: center;\n  background-color: white;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 30px;\n  min-width: 700px;\n  min-height: 400px;\n  border-radius: 15px;\n  box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\n`;\n\nexport const Hr = styled.hr`\n  width: 600px;\n`;\nexport const MainP = styled.p`\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const UserInput = styled.input`\n  width: 400px;\n  height: 30px;\n  font-size: 18px;\n`;\n\nexport const TransButton = styled.button`\n  border: none;\n  outline: 0;\n  background-color: transparent;\n  font-size: 30px;\n\n  &:hover {\n    top: 20px;\n    left: 20px;\n    color: gray;\n    cursor: pointer;\n  }\n`;\n","import React from \"react\";\nimport * as Main from '../Components';\n\nexport default function AwardList({ awardList, setIsToggle }) {\n  return (\n    <div>\n      <h2>수상이력</h2>\n      {awardList &&\n        awardList.map((award, idx) => {\n          return (\n            <div key={`award-${idx}`}>\n              <p style={{ display: \"none\" }}>{award.id}</p>\n              <Main.MainP>{award.name}</Main.MainP>\n              <p>{award.description}</p>\n              {awardList.length > 1 + idx && <Main.Hr />}\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\n\n","import React from \"react\";\nimport * as Main from '../Components'\nimport { BiSave } from \"react-icons/bi\";\nimport { GiCancel } from \"react-icons/gi\";\n\nexport default function AwardInput({\n  awardName,\n  awardDescription,\n  setAwardName,\n  setAwardDescription,\n  onSubmit,\n  awardList,\n  setIsToggle,\n}) {\n  return (\n    <div>\n      <h2>수상이력</h2>\n      <div>\n        {awardList &&\n          awardList.map((award, idx) => (\n            <div key={idx}>\n              <form>\n                <p>\n                  <Main.UserInput\n                    key={`${idx}-${award.name}`}\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={(e) => setAwardName(e.target.value)}\n                    defaultValue={award.name}\n                  />\n                </p>\n                <p>\n                  <Main.UserInput\n                    key={`${idx}-${award.description}`}\n                    type=\"text\"\n                    name=\"description\"\n                    onChange={(e) => setAwardDescription(e.target.value)}\n                    defaultValue={award.description}\n                  />\n                </p>\n              </form>\n              <Main.Hr />\n            </div>\n          ))}\n      </div>\n      <div>\n        <form onSubmit={onSubmit}>\n          <p>\n            <Main.UserInput\n              type=\"text\"\n              name=\"name\"\n              onChange={(e) => setAwardName(e.target.value)}\n              placeholder=\"수상 내역\"\n              required=\"required\"\n            />\n          </p>\n          <p>\n            <Main.UserInput\n              type=\"text\"\n              name=\"description\"\n              onChange={(e) => setAwardDescription(e.target.value)}\n              placeholder=\"상세 내역\"\n              required=\"required\"\n            />\n          </p>\n          <Main.TransButton type=\"submit\"><BiSave /></Main.TransButton>\n        </form>\n      </div>\n\n      <Main.TransButton onClick={() => setIsToggle(true)}><GiCancel /></Main.TransButton>\n    </div>\n  );\n}\n\n  ","import React, { useState, useEffect } from \"react\";\nimport AwardList from \"./Award/AwardList\";\nimport AwardInput from \"./Award/AwardInput\";\nimport axios from \"axios\";\nimport authHeader from \"../modules/authHeader\";\nimport * as Main from './Components';\nimport { BiEditAlt } from \"react-icons/bi\";\n\nconst Award = () => {\n  const [awardList, setAwardList] = useState([]);\n  const [awardName, setAwardName] = useState(\"\");\n  const [awardDescription, setAwardDescription] = useState(\"\");\n  const [isToggle, setIsToggle] = useState(true);\n\n  useEffect(() => {\n    const requestUserAward = async () => {\n      try {\n        const response = await axios.get(\n          `${process.env.REACT_APP_BASE_URL}/api/award`,\n          { headers: authHeader() }\n        );\n        setAwardList(response.data);\n      } catch (err) {\n        console.log(err.response);\n        if (err.response.status === 401) {\n          alert(\"토큰이 만료되었습니다.\");\n          window.localStorage.removeItem(\"access_token\");\n        }\n      }\n    };\n    requestUserAward();\n  }, [isToggle]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    console.log(awardName, awardDescription);\n    if (awardName === \"\" || awardDescription === \"\") {\n      setIsToggle(true);\n      return;\n    }\n    const body = { name: awardName, description: awardDescription };\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_BASE_URL}/award`,\n        body,\n        { headers: authHeader() }\n      );\n      console.log(response);\n      setIsToggle(true);\n    } catch (err) {\n      console.log(err.response);\n    }\n  };\n\n  return (\n    <Main.Container>\n      {isToggle ? (\n        <div>\n          <AwardList awardList={awardList} setIsToggle={setIsToggle} />\n          <Main.TransButton onClick={() => setIsToggle(false)}><BiEditAlt /></Main.TransButton>\n        </div>\n      ) : (\n        <AwardInput\n          awardName={awardName}\n          awardDescription={awardDescription}\n          setAwardName={setAwardName}\n          setAwardDescription={setAwardDescription}\n          onSubmit={onSubmit}\n          awardList={awardList}\n          setIsToggle={setIsToggle}\n        />\n      )}\n    </Main.Container>\n  );\n};\n\nexport default Award;\n","import React from \"react\";\nimport * as Main from '../Components'\n\nexport default function CertificateList({ certificateList }) {\n  return (\n    <div>\n      <h2>자격증</h2>\n      {certificateList &&\n        certificateList.map((certificate, idx) => {\n          return (\n            <div key={`certificate-${idx}`}>\n              <p style={{ display: \"none\" }}>{certificate.id}</p>\n              <Main.MainP>{certificate.name}</Main.MainP>\n              <p>{certificate.certified_by}</p>\n              <p>{certificate.certified_date}</p>\n              {certificateList.length > 1 + idx && <Main.Hr />}\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport * as Main from '../Components'\nimport { BiSave } from \"react-icons/bi\";\nimport { GiCancel } from \"react-icons/gi\";\n\nexport default function CertificateInput({\n  certificateList,\n  setName,\n  setCertified_by,\n  setCertified_date,\n  onSubmit,\n  setIsToggle,\n}) {\n  return (\n    <div>\n      <h2>자격증</h2>\n      <div>\n        {certificateList &&\n          certificateList.map((certificate, idx) => (\n            <div key={`certificate-${idx}`}>\n              <form>\n                <p>\n                  <Main.UserInput\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={(e) => setName(e.target.name)}\n                    defaultValue={certificate.name}\n                    required=\"required\"\n                  />\n                </p>\n                <p>\n                  <Main.UserInput\n                    type=\"text\"\n                    name=\"certified_by\"\n                    onChange={(e) => setCertified_by(e.target.value)}\n                    defaultValue={certificate.certified_by}\n                    required=\"required\"\n                  />\n                </p>\n                <p>\n                  <input\n                    type=\"text\"\n                    name=\"certified_date\"\n                    defaultValue={certificate.certified_date}\n                    onChange={(e) => setCertified_date(e.target.value)}\n                    required=\"required\"\n                  />\n                </p>\n              </form>\n              <Main.Hr />\n            </div>\n          ))}\n      </div>\n\n      <div>\n        <form onSubmit={onSubmit}>\n          <p>\n            <Main.UserInput\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"자격증 명\"\n              onChange={(e) => setName(e.target.value)}\n              required=\"required\"\n            />\n          </p>\n          <p>\n            <Main.UserInput\n              type=\"text\"\n              name=\"certified_by\"\n              placeholder=\"취득 기관\"\n              onChange={(e) => setCertified_by(e.target.value)}\n              required=\"required\"\n            />\n          </p>\n          <p>\n            <input\n              type=\"date\"\n              name=\"certified_by\"\n              placeholder=\"자격증 취득일\"\n              onChange={(e) => setCertified_date(e.target.value)}\n              required=\"required\"\n            />\n          </p>\n          <Main.TransButton type=\"submit\"><BiSave /></Main.TransButton>\n        </form>\n        <Main.TransButton onClick={() => setIsToggle(true)}><GiCancel /></Main.TransButton>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport CertificateList from \"./Certificate/CertificateList\";\nimport CertificateInput from \"./Certificate/CertificateInput\";\nimport axios from \"axios\";\nimport authHeader from \"../modules/authHeader\";\nimport * as Main from './Components'\nimport { BiEditAlt } from \"react-icons/bi\";\n\nconst Certificate = () => {\n  const [certificateList, setCertificateList] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [certified_by, setCertified_by] = useState(\"\");\n  const [certified_date, setCertified_date] = useState(\"\");\n  const [isToggle, setIsToggle] = useState(true);\n\n  useEffect(() => {\n    const requestUserEdu = async () => {\n      try {\n        const response = await axios.get(\n          `${process.env.REACT_APP_BASE_URL}/api/certificate`,\n          { headers: authHeader() }\n        );\n        setCertificateList(response.data);\n      } catch (err) {\n        console.log(err.response);\n        if (err.response.status === 401) {\n          alert(\"토큰이 만료되었습니다.\");\n          window.localStorage.removeItem(\"access_token\");\n        }\n      }\n    };\n    requestUserEdu();\n  }, [isToggle]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    console.log(name, certified_by, certified_date);\n    if (name === \"\" || certified_by === \"\" || certified_date === \"\") {\n      setIsToggle(true);\n      return;\n    }\n    const body = { name, certified_by, certified_date };\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_BASE_URL}/certificate`,\n        body,\n        { headers: authHeader() }\n      );\n      console.log(response);\n      setIsToggle(true);\n    } catch (err) {\n      console.log(err.response);\n    }\n  };\n\n  return (\n    <Main.Container>\n      {isToggle ? (\n        <div>\n          <CertificateList certificateList={certificateList} />\n          <Main.TransButton onClick={() => setIsToggle(false)}><BiEditAlt /></Main.TransButton>\n        </div>\n      ) : ( \n        <CertificateInput\n          certificateList={certificateList}\n          setName={setName}\n          setCertified_by={setCertified_by}\n          setCertified_date={setCertified_date}\n          onSubmit={onSubmit}\n          setIsToggle={setIsToggle}\n        />\n      )}\n    </Main.Container>\n  );\n};\n\nexport default Certificate;\n\n\n","import React from \"react\";\nimport * as Main from '../Components'\nimport { BiSave } from \"react-icons/bi\";\nimport { GiCancel } from \"react-icons/gi\";\nexport default function EducationInput({\n  educationList,\n  setSchool,\n  setMajor,\n  setRadio,\n  onSubmit,\n  setIsToggle,\n}) {\n  return (\n    <div>\n      <h2>학력</h2>\n      <div>\n        {educationList &&\n          educationList.map((education, idx) => (\n            <div key={`edu-${idx}`}>\n              <form>\n                <p>\n                  <Main.UserInput\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={(e) => setSchool(e.target.value)}\n                    defaultValue={education.school}\n                    required=\"required\"\n                  />\n                </p>\n                <p>\n                  <Main.UserInput\n                    type=\"text\"\n                    name=\"major\"\n                    onChange={(e) => setMajor(e.target.value)}\n                    defaultValue={education.major}\n                    required=\"required\"\n                  />\n                </p>\n\n                <div>\n                  <input\n                    type=\"radio\"\n                    name=\"status\"\n                    value={education.value}\n                    onChange={(e) => setRadio(e.target.value)}\n                    required=\"required\"\n                  />\n                  <label htmlFor=\"01\">재학중</label>\n\n                  <input\n                    type=\"radio\"\n                    name=\"status\"\n                    value={education.value}\n                    onChange={(e) => setRadio(e.target.value)}\n                    required=\"required\"\n                  />\n                  <label htmlFor=\"02\">졸업</label>\n\n                  <input\n                    type=\"radio\"\n                    name=\"status\"\n                    value={education.value}\n                    onChange={(e) => setRadio(e.target.value)}\n                    required=\"required\"\n                  />\n                  <label htmlFor=\"03\">석사졸업</label>\n\n                  <input\n                    type=\"radio\"\n                    name=\"status\"\n                    value={education.value}\n                    onChange={(e) => setRadio(e.target.value)}\n                    required=\"required\"\n                  />\n                  <label htmlFor=\"04\">박사졸업</label>\n                </div>\n              </form>\n              <Main.Hr />\n            </div>\n          ))}\n      </div>\n      <div>\n        <form onSubmit={onSubmit}>\n          <p>\n            <Main.UserInput\n              type=\"text\"\n              name=\"name\"\n              onChange={(e) => setSchool(e.target.value)}\n              placeholder=\"학교 이름\"\n              required=\"required\"\n            />\n          </p>\n          <p>\n            <Main.UserInput\n              type=\"text\"\n              name=\"major\"\n              onChange={(e) => setMajor(e.target.value)}\n              placeholder=\"전공\"\n              required=\"required\"\n            />\n          </p>\n          <div>\n            <input\n              type=\"radio\"\n              name=\"status\"\n              value=\"재학중\"\n              onChange={(e) => setRadio(e.target.value)}\n              required=\"required\"\n            />\n            <label htmlFor=\"01\">재학중</label>\n\n            <input\n              type=\"radio\"\n              name=\"status\"\n              value=\"졸업\"\n              onChange={(e) => setRadio(e.target.value)}\n              required=\"required\"\n            />\n            <label htmlFor=\"02\">졸업</label>\n\n            <input\n              type=\"radio\"\n              name=\"status\"\n              value=\"석사졸업\"\n              onChange={(e) => setRadio(e.target.value)}\n              required=\"required\"\n            />\n            <label htmlFor=\"03\">석사졸업</label>\n            <input\n              type=\"radio\"\n              name=\"status\"\n              value=\"박사졸업\"\n              onChange={(e) => setRadio(e.target.value)}\n              required=\"required\"\n            />\n            <label htmlFor=\"04\">박사졸업</label>\n          </div>\n          <Main.TransButton type=\"submit\"><BiSave /></Main.TransButton>\n        </form>\n      </div>\n      <Main.TransButton onClick={() => setIsToggle(true)}><GiCancel /></Main.TransButton>\n    </div>\n  );\n}\n","import React from \"react\";\nimport * as Main from \"../Components\";\nimport styled from \"styled-components\";\n\nexport default function EducationList({ educationList }) {\n  return (\n    <div>\n      <h2>학력</h2>\n      {educationList &&\n        educationList.map((education, idx) => {\n          return (\n            <div key={idx}>\n              <Main.MainP key={`${idx}-${education.school}`}>\n                {education.school}\n              </Main.MainP>\n              <Inline>\n                <p key={`${idx}-${education.major}`}>{education.major}   (</p>\n                <p key={`${idx}-${education.status}`}>{education.status})</p>\n              </Inline>\n              {educationList.length > 1 + idx && <Main.Hr />}\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nconst Inline = styled.div`\n  display: flex;\n`","import React, { useState, useEffect } from \"react\";\nimport EducationInput from \"./Education/EducationInput\";\nimport EducationList from \"./Education/EducationList\";\nimport axios from \"axios\";\nimport authHeader from \"../modules/authHeader\";\nimport { BiEditAlt } from \"react-icons/bi\";\nimport * as Main from \"./Components\"\n\nconst Education = () => {\n  const [educationList, setEducationList] = useState([]);\n  const [school, setSchool] = useState(\"\");\n  const [major, setMajor] = useState(\"\");\n  const [radio, setRadio] = useState(\"\");\n  const [isToggle, setIsToggle] = useState(true);\n\n  useEffect(() => {\n    const requestUserEdu = async () => {\n      try {\n        const response = await axios.get(\n          `${process.env.REACT_APP_BASE_URL}/api/education`,\n          { headers: authHeader() }\n        );\n        setEducationList(response.data);\n      } catch (err) {\n        console.log(err.response);\n        if (err.response.status === 401) {\n          alert(\"토큰이 만료되었습니다.\");\n          window.localStorage.removeItem(\"access_token\");\n        }\n      }\n    };\n    requestUserEdu();\n  }, [isToggle]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    console.log(school, major, radio);\n    if (school === \"\" || major === \"\" || radio === \"\") {\n      setIsToggle(true);\n      return;\n    }\n    const body = { school, major, status: radio };\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_BASE_URL}/education`,\n        body,\n        { headers: authHeader() }\n      );\n      console.log(response);\n      setIsToggle(true);\n    } catch (err) {\n      console.log(err.response);\n    }\n  };\n\n  return (\n    <Main.Container>\n      {isToggle ? (\n        <div>\n          <EducationList\n            educationList={educationList}\n            setIsToggle={setIsToggle}\n          />\n          <Main.TransButton onClick={() => setIsToggle(false)}><BiEditAlt /></Main.TransButton>\n        </div>\n      ) : (\n        <EducationInput\n          educationList={educationList}\n          setMajor={setMajor}\n          setSchool={setSchool}\n          setRadio={setRadio}\n          onSubmit={onSubmit}\n          setIsToggle={setIsToggle}\n        />\n      )}\n    </Main.Container>\n  );\n};\n\nexport default Education;\n\n\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport default function ProfileList({ file, username, introduction }) {\n  return (\n    <div>\n      <h2>프로필</h2>\n      <Img src={file.file} alt=\"#\" />\n      <h3>{username}</h3>\n      <h4>{introduction}</h4>\n    </div>\n  );\n}\n\nconst Img = styled.img`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  border: none;\n  background-color: yellow;\n`;\n\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { BiSave } from \"react-icons/bi\";\nimport * as Main from '../Components'\n\n\n\nexport default function ProfileUpload({\n  onhandlerChange,\n  username,\n  file,\n  introduction,\n  setUsername,\n  setIntroduction,\n  onSubmitIntroduction,\n}) {\n  return (\n    <div>\n      <h2>프로필</h2>\n      <p>\n        <label className=\"input-file-button\" htmlFor=\"input-file\">\n          <Img src={file.file} alt=\"#\" />\n        </label>\n        <input\n          id=\"input-file\"\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={onhandlerChange}\n          style={{ display: \"none\" }}\n        />\n      </p>\n      <form onSubmit={onSubmitIntroduction}>\n        <p>\n          <Input\n            type=\"text\"\n            defaultValue={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </p>\n        <p>\n          <Input\n            type=\"text\"\n            onChange={(e) => setIntroduction(e.target.value)}\n            placeholder=\"아무말 대잔치\"\n            defaultValue={introduction}\n          />\n        </p>\n        <Main.TransButton type=\"submit\">\n          <BiSave />\n        </Main.TransButton>\n      </form>\n    </div>\n  );\n}\n\nconst Img = styled.img`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  border: 1px solid white;\n  background-color: yellow;\n  &:hover {\n      cursor: pointer;\n  }\n`;\n\nconst Input = styled.input`\n  font-size: 16px;\n  background-color: transparent;\n  color: black;\n  text-align: center;\n  width: 150px;\n  &:hover {\n      cursor: pointer;\n  }\n`;\n\n\n","import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport authHeader from \"../modules/authHeader\";\nimport styled from \"styled-components\";\nimport ProfileList from \"./Profile/ProfileList\";\nimport ProfileUpload from \"./Profile/ProfileUpload\";\nimport { BiEditAlt } from \"react-icons/bi\";\nimport * as Main from './Components'\n\n// Racer 정보 및 수정 업로드 기능 page\nexport default function Mainpage() {\n  const [file, setFile] = useState({ file: null });\n  const [username, setUsername] = useState(\"\");\n  const [introduction, setIntroduction] = useState(\"\");\n  const [isToggle, setIsToggle] = useState(true);\n  //token 확인 및 유저 프로필 정보 요청\n\n  useEffect(() => {\n    const request_profile = async () => {\n      try {\n        const response = await axios.get(\n          `${process.env.REACT_APP_BASE_URL}/api/profile`,\n          { headers: authHeader() }\n        );\n        setFile({\n          file: `${process.env.REACT_APP_BASE_URL}/${response.data.profile_image}`,\n        });\n        setUsername(response.data.username);\n        setIntroduction(response.data.introduction);\n      } catch (err) {\n        console.log(err.response);\n        if (err.response.status === 401) {\n          alert(\"토큰이 만료되었습니다.\");\n          window.localStorage.removeItem(\"access_token\");\n        }\n      }\n    };\n    request_profile();\n  }, []);\n\n  // 프로필 이미지 변경 후 서버로 전달\n  const onhandlerChange = async (event) => {\n    const imageFile = Array.from(event.target.files);\n    const formData = new FormData();\n    formData.append(\"file\", imageFile[0]);\n    try {\n      const response = await axios.patch(\n        `${process.env.REACT_APP_BASE_URL}/profile`,\n        formData,\n        { headers: authHeader() }\n      );\n      console.log(response);\n    } catch (error) {\n      console.log(error.response);\n    }\n    setFile({\n      file: URL.createObjectURL(event.target.files[0]),\n    });\n  };\n\n  // username 및 introduction 수정 후 서버로 전달\n  const onSubmitIntroduction = async (e) => {\n    e.preventDefault();\n    console.log(introduction, username);\n    const body = { introduction, username };\n    try {\n      const response = await axios.patch(\n        `${process.env.REACT_APP_BASE_URL}/profile`,\n        body,\n        { headers: authHeader() }\n      );\n      console.log(response);\n      setIsToggle(true);\n    } catch (err) {\n      console.log(err.response);\n    }\n  };\n\n  return (\n    <Container>\n      {isToggle ? (\n        <div>\n          <ProfileList\n            file={file}\n            username={username}\n            introduction={introduction}\n            setIsToggle={setIsToggle}\n          />\n          <Main.TransButton\n            onClick={() => {\n              setIsToggle(false);\n            }}\n          >\n            <BiEditAlt />\n          </Main.TransButton>\n        </div>\n      ) : (\n        <ProfileUpload\n          file={file}\n          username={username}\n          introduction={introduction}\n          onhandlerChange={onhandlerChange}\n          setUsername={setUsername}\n          setIntroduction={setIntroduction}\n          onSubmitIntroduction={onSubmitIntroduction}\n          setIsToggle={setIsToggle}\n        />\n      )}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  position: sticky;\n  margin: 0;\n  top: 170px;\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  background-color: white;\n  margin: 0 auto 0;\n  width: 300px;\n  height: 400px;\n  border-radius: 15px;\n  box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\n`;\n","import React from \"react\";\nimport * as Main from '../Components'\n\nexport default function ProjectList({ projectList }) {\n  return (\n    <div>\n      <h2>프로젝트</h2>\n      {projectList &&\n        projectList.map((project, idx) => {\n          return (\n            <div key={idx}>\n              <p style={{ display: \"none\" }}>{project.id}</p>\n              <Main.MainP>{project.title}</Main.MainP>\n              <p>{project.content}</p>\n              <p>\n                <span>{project.start_date}</span>\n                <span> - </span>\n                <span>{project.end_date}</span>\n              </p>\n              {projectList.length > 1 + idx && <Main.Hr />}\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n","import React from \"react\";\nimport * as Main from '../Components'\nimport { GiCancel } from \"react-icons/gi\";\nimport { BiSave } from \"react-icons/bi\";\n\nexport default function ProjectInput({\n  setTitle,\n  setContent,\n  onSubmit,\n  projectList,\n  startDate,\n  setStartDate,\n  endDate,\n  setEndDate,\n  setIsToggle,\n}) {\n  return (\n    <div>\n      <h2>프로젝트</h2>\n      <div>\n        {projectList &&\n          projectList.map((award, idx) => (\n            <div key={`award-${idx}`}>\n              <form>\n                <p>\n                  <Main.UserInput\n                    type=\"text\"\n                    name=\"title\"\n                    onChange={(e) => setTitle(e.target.value)}\n                    defaultValue={award.title}\n                    required=\"required\"\n                  />\n                </p>\n                <p>\n                  <Main.UserInput\n                    type=\"text\"\n                    name=\"description\"\n                    onChange={(e) => setContent(e.target.value)}\n                    defaultValue={award.content}\n                    required=\"required\"\n                  />\n                </p>\n\n                <input\n                  type=\"date\"\n                  name=\"startDate\"\n                  onChange={(e) => setStartDate(e.target.value)}\n                  defaultValue={award.start_date}\n                  required=\"required\"\n                />\n                <input\n                  type=\"date\"\n                  name=\"endDate\"\n                  onChange={(e) => setEndDate(e.target.value)}\n                  defaultValue={award.end_date}\n                  required=\"required\"\n                />\n              </form>\n              <Main.Hr />\n            </div>\n          ))}\n      </div>\n      <form onSubmit={onSubmit}>\n        <p>\n          <Main.UserInput\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"프로젝트 명\"\n            onChange={(e) => setTitle(e.target.value)}\n            required=\"required\"\n          />\n        </p>\n        <p>\n          <Main.UserInput\n            type=\"text\"\n            name=\"content\"\n            placeholder=\"상세 내역\"\n            onChange={(e) => setContent(e.target.value)}\n            required=\"required\"\n          />\n        </p>\n        <p>\n          <input\n            type=\"date\"\n            name=\"startDate\"\n            onChange={(e) => setStartDate(e.target.value)}\n            required=\"required\"\n          />\n          <input\n            type=\"date\"\n            name=\"endDate\"\n            onChange={(e) => setEndDate(e.target.value)}\n            required=\"required\"\n          />\n        </p>\n        <Main.TransButton type=\"submit\">\n          <BiSave />\n        </Main.TransButton>\n      </form>\n\n      <Main.TransButton onClick={() => setIsToggle(true)}>\n        <GiCancel />\n      </Main.TransButton>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport ProjectList from \"./Project/ProjectList\";\nimport ProjectInput from \"./Project/ProjectInput\";\nimport axios from \"axios\";\nimport authHeader from \"../modules/authHeader\";\nimport * as Main from './Components'\nimport { BiEditAlt } from \"react-icons/bi\";\n\nconst Project = () => {\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [projectList, setProjectList] = useState([]);\n  const [isToggle, setIsToggle] = useState(true);\n\n  useEffect(() => {\n    const requestUserProject = async () => {\n      try {\n        const response = await axios.get(\n          `${process.env.REACT_APP_BASE_URL}/api/project`,\n          { headers: authHeader() }\n        );\n        setProjectList(response.data);\n      } catch (err) {\n        console.log(err.response);\n        if (err.response.status === 401) {\n          alert(\"토큰이 만료되었습니다.\");\n          window.localStorage.removeItem(\"access_token\");\n        }\n      }\n    };\n    requestUserProject();\n  }, [isToggle]);\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    const body = { title, content, startDate, endDate };\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_BASE_URL}/project`,\n        body,\n        { headers: authHeader() }\n      );\n      console.log(response);\n      setIsToggle(true);\n    } catch (err) {\n      console.log(err.response);\n    }\n  };\n\n  return (\n    <Main.Container>\n      {isToggle ? (\n        <div>\n          <ProjectList projectList={projectList} />\n          <Main.TransButton onClick={() => setIsToggle(false)}><BiEditAlt /></Main.TransButton>\n        </div>\n      ) : (\n        <ProjectInput\n          projectList={projectList}\n          setTitle={setTitle}\n          setContent={setContent}\n          setStartDate={setStartDate}\n          setEndDate={setEndDate}\n          onSubmit={onSubmit}\n          startDate={startDate}\n          endDate={endDate}\n          setIsToggle={setIsToggle}\n        />\n      )}\n    </Main.Container>\n  );\n};\n\nexport default Project;\n\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport {\n  Award,\n  Certificate,\n  Education,\n  Profile,\n  Project,\n} from \"../components/allComponents\";\n\nconst Main = () => {\n  return (\n    <Container>\n      <Profile />\n      <div>\n        <Education />\n        <Award />\n        <Project />\n        <Certificate />\n      </div>\n    </Container>\n  );\n};\n\nexport default Main;\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1300px;\n  justify-content: space-around;\n  top: 50px;\n`;\n","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nexport default function Logout() {\n  useEffect(() => {\n    window.localStorage.removeItem(\"access_token\");\n    window.location.href = \"/login\";\n  });\n  return (\n    <Container>\n      <p>로그아웃 되었습니다.</p>\n      <p>다시 놀러오세요</p>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n    font-size: 30px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    text-align: center;\n`","import React from \"react\";\nimport styled from \"styled-components\";\nimport * as Main from \"./Components\";\nexport default function ProfileList({\n  file,\n  username,\n  introduction,\n}) {\n  return (\n    <ProfileContainer>\n      <h2>프로필</h2>\n      <Img src={file.file} alt=\"#\" />\n      <h3>{username}</h3>\n      <h4>{introduction}</h4>\n    </ProfileContainer>\n  );\n}\n\nconst Img = styled.img`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  border: none;\n  background-color: yellow;\n`;\n\nconst ProfileContainer = styled.div`\n  position: sticky;\n  margin: 0;\n  padding-top: 50px;\n  top: 170px;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  align-content: center;\n  background-color: white;\n  margin: 0 auto 0;\n  width: 300px;\n  height: 400px;\n  border-radius: 15px;\n  box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\n`;\n\nexport function EducationList({ educationList }) {\n  return (\n    <MainContainer>\n      <h2>학력</h2>\n      {educationList &&\n        educationList.map((education, idx) => {\n          return (\n            <div key={idx}>\n              <Main.MainP key={`${idx}-${education.school}`}>\n                {education.school}\n              </Main.MainP>\n              <Inline>\n                <p key={`${idx}-${education.major}`}>{education.major}   (</p>\n                <p key={`${idx}-${education.status}`}>{education.status})</p>\n              </Inline>\n              {educationList.length > 1 + idx && <Main.Hr />}\n            </div>\n          );\n        })}\n    </MainContainer>\n  );\n}\n\nconst Inline = styled.div`\n  display: flex;\n`\n\nexport function AwardList({ awardList }) {\n  return (\n    <MainContainer>\n      <h2>수상이력</h2>\n      {awardList &&\n        awardList.map((award, idx) => {\n          return (\n            <div key={`award-${idx}`}>\n              <p style={{ display: \"none\" }}>{award.id}</p>\n              <Main.MainP>{award.name}</Main.MainP>\n              <p>{award.description}</p>\n              {awardList.length > 1 + idx && <Main.Hr />}\n            </div>\n          );\n        })}\n    </MainContainer>\n  );\n}\n\nexport function ProjectList({ projectList }) {\n  return (\n    <MainContainer>\n      <h2>프로젝트</h2>\n      {projectList &&\n        projectList.map((project, idx) => {\n          return (\n            <div key={idx}>\n              <p style={{ display: \"none\" }}>{project.id}</p>\n              <Main.MainP>{project.title}</Main.MainP>\n              <p>{project.content}</p>\n              <p>\n                <span>{project.start_date}</span>\n                <span> - </span>\n                <span>{project.end_date}</span>\n              </p>\n              {projectList.length > 1 + idx && <Main.Hr />}\n            </div>\n          );\n        })}\n    </MainContainer>\n  );\n}\n\nexport function CertificateList({ certificateList }) {\n  return (\n    <MainContainer>\n      <h2>자격증</h2>\n      {certificateList &&\n        certificateList.map((certificate, idx) => {\n          return (\n            <div key={`certificate-${idx}`}>\n              <p style={{ display: \"none\" }}>{certificate.id}</p>\n              <Main.MainP>{certificate.name}</Main.MainP>\n              <p>{certificate.certified_by}</p>\n              <p>{certificate.certified_date}</p>\n              {certificateList.length > 1 + idx && <Main.Hr />}\n            </div>\n          );\n        })}\n    </MainContainer>\n  );\n}\n\nconst MainContainer = styled.div`\n  position: relative;\n  top: 50px;\n  padding: 50px;\n  align-items: center;\n  background-color: white;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 30px;\n  min-width: 700px;\n  min-height: 400px;\n  border-radius: 15px;\n  box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\n`;","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport authHeader from \"../modules/authHeader\";\nimport ProfileList, {\n  AwardList,\n  EducationList,\n  ProjectList,\n  CertificateList,\n} from \"../components/ListComponents\";\nimport styled from \"styled-components\";\n\nexport default function Users() {\n  const [profile, setProfile] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [educationList, setEducationList] = useState([]);\n  const [awardList, setAwardList] = useState([]);\n  const [projectList, setProjectList] = useState([]);\n  const [certificateList, setCertificateList] = useState([]);\n  const user_id = window.location.href.split(\"/\")[5];\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const response = await axios.get(\n          `${process.env.REACT_APP_BASE_URL}/api/profile/users/${user_id}`,\n          { headers: authHeader() }\n        );\n        setProfile(response.data.users);\n        setFile({\n          file: `${process.env.REACT_APP_BASE_URL}/${response.data.users.profile_image}`,\n        });\n        setEducationList(response.data.education_list);\n        setAwardList(response.data.award_list);\n        setCertificateList(response.data.certificate_list);\n        setProjectList(response.data.project_list);\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  }, []);\n\n  return (\n    <Container>\n      <ProfileList\n        file={file}\n        username={profile.username}\n        introduction={profile.introduction}\n      />\n      <div>\n        <EducationList educationList={educationList} />\n        <AwardList awardList={awardList} />\n        <ProjectList projectList={projectList} />\n        <CertificateList certificateList={certificateList} />\n      </div>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1300px;\n  justify-content: space-around;\n  top: 50px;\n`;\n\n","import React from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport LoginPage from \"./pages/Login\";\nimport Network from \"./pages/Network\";\nimport RegisterPage from \"./pages/RegisterPage\";\nimport PrivateRoute from \"./Helper/PrivateRoute\";\nimport Main from \"./pages/Main\";\nimport Logout from \"./pages/Logout\";\nimport Users from \"./pages/Users\";\nimport styled, { css } from \"styled-components\";\nfunction App() {\n  return (\n    <>\n      <Container>\n        <p>RacerIn</p>\n        <Navi>\n          {!window.localStorage.getItem(\"access_token\") ? (\n            <div>\n              <StyledLink to=\"/login\">로그인</StyledLink>\n\n              <StyledLink to=\"/register\">회원가입</StyledLink>\n            </div>\n          ) : (\n            <div>\n              <StyledLink to=\"/main\">메인 페이지</StyledLink>\n\n              <StyledLink to=\"/network\">네트워크</StyledLink>\n\n              <StyledLink to=\"/logout\">로그아웃</StyledLink>\n            </div>\n          )}\n        </Navi>\n      </Container>\n      <Route component={LoginPage} exact path={[\"/login\", \"/\"]} />\n      <Route component={RegisterPage} path=\"/register\" />\n      <PrivateRoute component={Network} path=\"/network\" />\n      <PrivateRoute exact component={Main} path=\"/main\" />\n      <PrivateRoute component={Users} path=\"/main/user/:id\" />\n      <PrivateRoute component={Logout} path=\"/logout\" />\n    </>\n  );\n}\n\nexport default App;\n\nconst Container = styled.header`\n  display: flex;\n  position: sticky;\n  z-index: 999;\n  top: 0;\n  background-color: white;\n  padding-right: 30px;\n  padding-left: 30px;\n  height: 70px;\n  text-align: center;\n  align-items: center;\n  font-size: 25px;\n  min-width: 600px;\n  box-shadow: 0 6px 12px -2px rgba(50, 50, 93, 0.25),\n    0 3px 7px -3px rgba(0, 0, 0, 0.3);\n    font-weight: 500;\n`;\n\nconst Navi = styled.ul`\n  display: flex;\n  margin-left: auto;\n`;\n\nconst StyledLink = styled(Link)`\n  margin-left: 20px;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}